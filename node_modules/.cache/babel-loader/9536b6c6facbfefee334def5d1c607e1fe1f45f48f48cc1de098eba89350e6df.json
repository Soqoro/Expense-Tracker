{"ast":null,"code":"var _jsxFileName = \"/home/sqr/Repos/01-starting-setup/src/components/Expenses/ExpenseItem.js\",\n  _s = $RefreshSig$();\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport React, { useState } from 'react';\n\n//props or properties is basically the properties we define in app.js and we can use here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseItem(props) {\n  _s();\n  //Note the use of {} which is used to allow javascript expressions to be added to these JSX\n\n  const [title, setTitle] = useState(props.title);\n  //These are hooks and can only be called inside reaction functions. useState allow you to change values such as prop.title when eventhandler occurs\n  //useState accepts a parameter and if that argument is changed, then React will call the component function again\n\n  function clickHandler() {\n    setTitle(\"Updated\"); //Basically waht useState do is it returns a value for a variable and a function to update it, if that update function is called, the component is called again\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseItem, \"fU9xfXMZ2vKtpMd5J6Xek2RVXNQ=\");\n_c = ExpenseItem;\nexport default ExpenseItem; //export this function as the default for this file\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","Card","React","useState","ExpenseItem","props","title","setTitle","clickHandler","date","amount"],"sources":["/home/sqr/Repos/01-starting-setup/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport React, {useState} from 'react';\n\n//props or properties is basically the properties we define in app.js and we can use here\nfunction ExpenseItem(props) {\n  //Note the use of {} which is used to allow javascript expressions to be added to these JSX\n  \n  const [title,setTitle] = useState(props.title);\n  //These are hooks and can only be called inside reaction functions. useState allow you to change values such as prop.title when eventhandler occurs\n  //useState accepts a parameter and if that argument is changed, then React will call the component function again\n\n  function clickHandler(){\n    setTitle(\"Updated\"); //Basically waht useState do is it returns a value for a variable and a function to update it, if that update function is called, the component is called again\n  }\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date}></ExpenseDate>\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem; //export this function as the default for this file\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;;AAErC;AAAA;AACA,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EAC1B;;EAEA,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGJ,QAAQ,CAACE,KAAK,CAACC,KAAK,CAAC;EAC9C;EACA;;EAEA,SAASE,YAAY,GAAE;IACrBD,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACvB;;EACA,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC,cAAc;IAAA,wBAC5B,QAAC,WAAW;MAAC,IAAI,EAAEF,KAAK,CAACI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAe,eAC7C;MAAK,SAAS,EAAC,2BAA2B;MAAA,wBACxC;QAAA,UAAKH;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAChB;QAAK,SAAS,EAAC,qBAAqB;QAAA,WAAC,GAAC,EAACD,KAAK,CAACK,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACtD,eACN;MAAQ,OAAO,EAAEF,YAAa;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEX;AAAC,GApBQJ,WAAW;AAAA,KAAXA,WAAW;AAsBpB,eAAeA,WAAW,CAAC,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}